{"version":3,"sources":["app.js","App/routings.js","DownloadList/DownloadListRepository.js","DragAndDrop/draggable.js","DragAndDrop/droppable.js","Friends/FriendsController.js","Friends/FriendsService.js","Friends/User.js","Home/HomeController.js","Movie/Movie.js","Movie/MovieController.js","Movie/MovieDetailsCarousel.js","Movie/MovieDetailsMobile.js","Movie/MoviePoster.js","Movie/MoviePosterRepository.js","Movie/MovieSearchController.js","Movie/MovieThumb.js","Movie/MovieToolTip.js","Movie/MovieTrailer.js","Overview/MovieOverview.js","Overview/MovieOverviewController.js","Validation/email.js","Watchlist/WatchlistItem.js","MovieService.js","Sharing/movie-share-button.js","watchlist-button.js"],"names":[],"mappings":"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","file":"all.min.js","sourcesContent":["/// <reference path=\"../../../scripts/typings/angular/angularjs-1.2-d.ts\" />\r\n/// <reference path=\"../../../scripts/typings/angular/angularjs-route-1.2-d.ts\" />\r\n/// <reference path=\"../../../scripts/typings/bootstrap/bootstrap.d.ts\" />\r\n/// <reference path=\"../../../Scripts/typings/underscore/underscore.d.ts\"/>\r\n/// <reference path=\"../../../scripts/typings/jquery/jquery.d.ts\" />\r\n/// <reference path=\"../../../scripts/typings/toastr/toastr.d.ts\" />\r\n/// <reference path=\"../../../scripts/typings/jqueryui/jqueryui.d.ts\" />\r\ntoastr.options = {\r\n    \"closeButton\": true,\r\n    \"debug\": false,\r\n    \"newestOnTop\": false,\r\n    \"progressBar\": false,\r\n    \"positionClass\": \"toast-bottom-full-width\",\r\n    \"preventDuplicates\": false,\r\n    \"onclick\": null,\r\n    \"hideDuration\": 1000,\r\n    \"timeOut\": 5000,\r\n    \"extendedTimeOut\": 1000,\r\n    \"showEasing\": \"swing\",\r\n    \"hideEasing\": \"linear\",\r\n    \"showMethod\": \"fadeIn\",\r\n    \"hideMethod\": \"fadeOut\"\r\n};\r\nvar app = angular.module('movieApp', ['ngRoute']);\r\napp.config(['$httpProvider', function ($httpProvider) {\r\n        $httpProvider.defaults.headers.common[\"X-Requested-With\"] = 'XMLHttpRequest';\r\n    }]);\r\napp.run(['$http', '$rootScope', '$timeout', function ($http, $rootScope, $timeout) {\r\n        $.ajax({\r\n            async: false,\r\n            url: '/Home/GetStartupData',\r\n            success: function (response) {\r\n                $rootScope.userId = response.userId;\r\n                $rootScope.username = response.username;\r\n                $rootScope.friends = response.friends;\r\n            },\r\n        });\r\n        $rootScope.$on('$routeChangeStart', function () {\r\n            $(\"#page-loader\").show();\r\n        });\r\n        $rootScope.$on('$routeChangeSuccess', function () {\r\n            $timeout(function () {\r\n                $(\"#page-loader\").hide();\r\n            });\r\n            hideMobileMenu();\r\n        });\r\n    }]);\r\nfunction hideMobileMenu() {\r\n    // check if window is small enough so dropdown is created\r\n    jQuery(\".navbar-collapse\").removeClass(\"in\").addClass(\"collapse\");\r\n}\r\n","app.config([\"$routeProvider\", function ($routeProvider) {\r\n        $routeProvider.\r\n            when('/Cinema', {\r\n            templateUrl: '/Partials/Movie/MovieOverview.html',\r\n            controller: 'MovieOverviewController',\r\n            controllerAs: 'movieCtrl',\r\n            resolve: {\r\n                movies: ['MovieService', function (MovieService) {\r\n                        return MovieService.GetMoviesInCinema();\r\n                    }]\r\n            }\r\n        }).\r\n            when('/SoonInCinema', {\r\n            templateUrl: '/Partials/Movie/MovieOverview.html',\r\n            controller: 'MovieOverviewController',\r\n            controllerAs: 'movieCtrl',\r\n            resolve: {\r\n                movies: ['MovieService', function (MovieService) {\r\n                        return MovieService.GetMoviesSoonInCinema();\r\n                    }]\r\n            }\r\n        }).\r\n            when('/Rent', {\r\n            templateUrl: '/Partials/Movie/MovieOverview.html',\r\n            controller: 'MovieOverviewController',\r\n            controllerAs: 'movieCtrl',\r\n            resolve: {\r\n                movies: ['MovieService', function (MovieService) {\r\n                        return MovieService.GetMoviesForRent();\r\n                    }]\r\n            }\r\n        }).\r\n            when('/Movie/:imdb', {\r\n            templateUrl: '/Partials/Movie/Movie-Details.html',\r\n            controller: 'MovieController',\r\n            controllerAs: 'movieCtrl',\r\n            resolve: {\r\n                movie: ['$route', 'MovieService', function ($route, MovieService) {\r\n                        return MovieService.GetMovieByImdb($route.current.params.imdb);\r\n                    }]\r\n            },\r\n        }).\r\n            when('/Movie/Search/:movieName', {\r\n            templateUrl: '/Partials/Movie/SearchResults.html',\r\n            controller: 'MovieSearchController',\r\n            controllerAs: 'movieCtrl',\r\n            resolve: {\r\n                movies: ['$route', 'MovieService', function ($route, MovieService) {\r\n                        return MovieService.SearchMovie($route.current.params.movieName);\r\n                    }]\r\n            },\r\n        }).\r\n            when('/Friends', {\r\n            templateUrl: '/Partials/Friends/Index.html',\r\n            controller: 'FriendsController',\r\n            controllerAs: 'friendsCtrl',\r\n        }).\r\n            otherwise({\r\n            redirectTo: '/Rent'\r\n        });\r\n    }]);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var DownloadListRepository = (function () {\r\n        function DownloadListRepository($http, $q, $window) {\r\n            this.$http = $http;\r\n            this.$q = $q;\r\n            this.$window = $window;\r\n            this.MarkMovieAsWatched = function (watchListItem) {\r\n                this.$http.put('/api/DownloadList/MarkMovieAsWatched/', watchListItem);\r\n            };\r\n            this.GetMoviesToDownload = function () {\r\n                var _this = this;\r\n                return this.$http.get(\"/api/DownloadList/\").then(function (response) {\r\n                    _this.watchlist = response.data;\r\n                    return _this.watchlist;\r\n                });\r\n            };\r\n            this.watchlist = new Array();\r\n        }\r\n        DownloadListRepository.prototype.AddMovieToDownloadList = function (movie) {\r\n            var _this = this;\r\n            return this.$http.post(\"/api/DownloadList/\", movie).then(function (response) {\r\n                _this.watchlist.push(response.data);\r\n            });\r\n        };\r\n        DownloadListRepository.prototype.deleteFromDownloadListByMovie = function (movie) {\r\n            var watchlistItem = this.GetWatchlistItemByMovieId(movie.Id);\r\n            this.deleteFromDownloadListByWatchlist(watchlistItem);\r\n        };\r\n        DownloadListRepository.prototype.deleteFromDownloadListByWatchlist = function (watchlistItem) {\r\n            var _this = this;\r\n            return this.$http.delete(\"/api/DownloadList/\" + watchlistItem.Id).then(function (response) {\r\n                angular.copy(_.without(_this.watchlist, watchlistItem), _this.watchlist);\r\n            });\r\n        };\r\n        DownloadListRepository.prototype.IsMovieInDownloadList = function (movie) {\r\n            var enlistedMovie = _.filter(this.watchlist, function (item) {\r\n                return item.Movie.Imdb == movie.Imdb;\r\n            });\r\n            return enlistedMovie.length > 0;\r\n        };\r\n        DownloadListRepository.prototype.GetWatchlistItemByMovieId = function (movieId) {\r\n            var enlistedMovie = _.filter(this.watchlist, function (item) {\r\n                return item.Movie.Id == movieId;\r\n            });\r\n            return enlistedMovie && enlistedMovie.length > 0 ? _.first(enlistedMovie) : null;\r\n        };\r\n        DownloadListRepository.$inject = ['$http', '$q', '$window'];\r\n        return DownloadListRepository;\r\n    })();\r\n    MovieApp.DownloadListRepository = DownloadListRepository;\r\n})(MovieApp || (MovieApp = {}));\r\napp.service(\"DownloadListRepository\", MovieApp.DownloadListRepository);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function Draggable($rootScope) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attributes) {\r\n                // this gives us the native JS object\r\n                var el = element[0];\r\n                el.draggable = true;\r\n                el.addEventListener('dragstart', function (e) {\r\n                    e.dataTransfer.effectAllowed = 'copy';\r\n                    e.dataTransfer.setData('Text', attributes.draggable);\r\n                    this.classList.add('drag');\r\n                    $rootScope.$apply(function () {\r\n                        $rootScope.$broadcast(\"onDragStart\", \"\");\r\n                    });\r\n                    return false;\r\n                }, false);\r\n                el.addEventListener('dragend', function (e) {\r\n                    this.classList.remove('drag');\r\n                    return false;\r\n                }, false);\r\n            }\r\n        };\r\n    }\r\n    MovieApp.Draggable = Draggable;\r\n})(MovieApp || (MovieApp = {}));\r\napp.directive(\"draggable\", MovieApp.Draggable);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function Droppable($rootScope) {\r\n        return {\r\n            scope: {},\r\n            link: function (scope, element) {\r\n                // again we need the native object\r\n                var el = element[0];\r\n                el.addEventListener('dragover', function (e) {\r\n                    e.dataTransfer.dropEffect = 'copy';\r\n                    // allows us to drop\r\n                    if (e.preventDefault)\r\n                        e.preventDefault();\r\n                    this.classList.add('over');\r\n                    return false;\r\n                }, false);\r\n                el.addEventListener('dragenter', function (e) {\r\n                    this.classList.add('over');\r\n                    return false;\r\n                }, false);\r\n                el.addEventListener('dragleave', function (e) {\r\n                    this.classList.remove('over');\r\n                    return false;\r\n                }, false);\r\n                el.addEventListener('drop', function (e) {\r\n                    // Stops some browsers from redirecting.\r\n                    if (e.stopPropagation)\r\n                        e.stopPropagation();\r\n                    this.classList.remove('over');\r\n                    $rootScope.$apply(function () {\r\n                        $rootScope.$broadcast('onDragDrop', e.dataTransfer.getData('Text'));\r\n                    });\r\n                    //var item = document.getElementById(e.dataTransfer.getData('Text'));\r\n                    //this.appendChild(item);\r\n                    return false;\r\n                }, false);\r\n            }\r\n        };\r\n    }\r\n    MovieApp.Droppable = Droppable;\r\n})(MovieApp || (MovieApp = {}));\r\napp.directive(\"droppable\", MovieApp.Droppable);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var FriendsController = (function () {\r\n        function FriendsController($scope, $routeParams, FriendsService, movie) {\r\n            this.$scope = $scope;\r\n            this.$routeParams = $routeParams;\r\n            this.FriendsService = FriendsService;\r\n            this.movie = movie;\r\n            this.friends = $scope.friends;\r\n            //var x = $scope.friends;\r\n        }\r\n        FriendsController.prototype.showFriendDetails = function (friend) {\r\n            var _this = this;\r\n            this.selectedFriend = friend;\r\n            this.FriendsService.GetFriendById(friend.UserId).then(function (response) {\r\n                _this.selectedFriend = response;\r\n            });\r\n        };\r\n        FriendsController.$inject = ['$scope', '$routeParams', 'FriendsService'];\r\n        return FriendsController;\r\n    })();\r\n    MovieApp.FriendsController = FriendsController;\r\n    app.controller(\"FriendsController\", MovieApp.FriendsController);\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var FriendsService = (function () {\r\n        function FriendsService($http, $q, $location) {\r\n            this.$http = $http;\r\n            this.$q = $q;\r\n            this.$location = $location;\r\n            this.GetFriendById = function (id) {\r\n                return this.$http.get(\"/api/Friends/\" + id).then(this.requestSucceeded);\r\n            };\r\n        }\r\n        FriendsService.prototype.requestSucceeded = function (response) {\r\n            return response.data;\r\n        };\r\n        FriendsService.$inject = ['$http', '$q', '$location'];\r\n        return FriendsService;\r\n    })();\r\n    MovieApp.FriendsService = FriendsService;\r\n})(MovieApp || (MovieApp = {}));\r\napp.service(\"FriendsService\", MovieApp.FriendsService);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var Friend = (function () {\r\n        function Friend() {\r\n        }\r\n        Object.defineProperty(Friend.prototype, \"UserId\", {\r\n            get: function () {\r\n                return this._id;\r\n            },\r\n            set: function (id) {\r\n                this._id = id;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Friend.prototype, \"Username\", {\r\n            get: function () {\r\n                return this._username;\r\n            },\r\n            set: function (username) {\r\n                this._username = username;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Friend.prototype, \"List\", {\r\n            get: function () {\r\n                return this._list;\r\n            },\r\n            set: function (list) {\r\n                this._list = list;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Friend;\r\n    })();\r\n    MovieApp.Friend = Friend;\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var HomeController = (function () {\r\n        function HomeController($scope, $location, downloadListRepository) {\r\n            var _this = this;\r\n            this.$scope = $scope;\r\n            this.$location = $location;\r\n            this.downloadListRepository = downloadListRepository;\r\n            this.search = {\r\n                movieName: \"\",\r\n            };\r\n            this.$scope.$on('$locationChangeSuccess', function (event) {\r\n                _this.setActiveUrlPart();\r\n            });\r\n            $scope.movieTypeFilter = 3;\r\n            downloadListRepository.GetMoviesToDownload().then(function (response) {\r\n                _this.$scope.moviesToDownload = response;\r\n            });\r\n            $scope.$on(\"onDragStart\", function (event, data) {\r\n                _this.dragPending = true;\r\n            });\r\n            $scope.$on(\"onDragDrop\", function (event, data) {\r\n                var movie = angular.fromJson(data);\r\n                if (!_this.downloadListRepository.IsMovieInDownloadList(movie)) {\r\n                    _this.downloadListRepository.AddMovieToDownloadList(movie);\r\n                    _this.$scope.moviesToDownload.push(movie);\r\n                }\r\n                _this.dragPending = false;\r\n            });\r\n            $scope.filter = function (watchListItem) {\r\n                return watchListItem.Movie.MovieType == $scope.movieTypeFilter;\r\n            };\r\n            $scope.countMovieType = function (movieType) {\r\n                var count = 0;\r\n                angular.forEach($scope.moviesToDownload, function (watchlistItem) {\r\n                    if (watchlistItem.Movie.MovieType == movieType) {\r\n                        count++;\r\n                    }\r\n                });\r\n                return count;\r\n            };\r\n            $scope.isWatchlistVisible = function () {\r\n                return $(\"#download-list\").is(\":visible\");\r\n            };\r\n        }\r\n        HomeController.prototype.setActiveUrlPart = function () {\r\n            var parts = this.$location.path().split('/');\r\n            this.$scope.active = parts[1];\r\n        };\r\n        HomeController.prototype.deleteMovieFromDownloadList = function (watchlistItem) {\r\n            var _this = this;\r\n            this.downloadListRepository.deleteFromDownloadListByWatchlist(watchlistItem).then(function () {\r\n                angular.copy(_.without(_this.$scope.moviesToDownload, watchlistItem), _this.$scope.moviesToDownload);\r\n            });\r\n        };\r\n        Object.defineProperty(HomeController.prototype, \"moviesToDownload\", {\r\n            get: function () {\r\n                return this.$scope.moviesToDownload;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        HomeController.prototype.markMovieAsDownloaded = function (watchlistItem) {\r\n            this.downloadListRepository.MarkMovieAsWatched(watchlistItem);\r\n            watchlistItem.Movie.Downloaded = true;\r\n        };\r\n        HomeController.prototype.searchMovie = function () {\r\n            this.$location.path('/Movie/Search/' + this.search.movieName);\r\n        };\r\n        HomeController.$inject = [\r\n            '$scope',\r\n            '$location',\r\n            'DownloadListRepository',\r\n        ];\r\n        return HomeController;\r\n    })();\r\n    MovieApp.HomeController = HomeController;\r\n})(MovieApp || (MovieApp = {}));\r\napp.controller(\"HomeController\", MovieApp.HomeController);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var Movie = (function () {\r\n        function Movie() {\r\n        }\r\n        Object.defineProperty(Movie.prototype, \"Url\", {\r\n            get: function () {\r\n                return this._url;\r\n            },\r\n            set: function (url) {\r\n                this._url = url;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Movie.prototype, \"Year\", {\r\n            get: function () {\r\n                return this._year;\r\n            },\r\n            set: function (year) {\r\n                this._year = year;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Movie.prototype, \"Thumbnail\", {\r\n            get: function () {\r\n                return this._thumbnail;\r\n            },\r\n            set: function (thumbnail) {\r\n                this._thumbnail = thumbnail;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Movie.prototype, \"Plot\", {\r\n            get: function () {\r\n                return this._plot;\r\n            },\r\n            set: function (plot) {\r\n                this._plot = plot;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Movie.prototype, \"Duration\", {\r\n            get: function () {\r\n                return this._duration;\r\n            },\r\n            set: function (duration) {\r\n                this._duration = duration;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Movie.prototype, \"Downloaded\", {\r\n            get: function () {\r\n                return this._downloaded;\r\n            },\r\n            set: function (downloaded) {\r\n                this._downloaded = downloaded;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Movie.prototype, \"Title\", {\r\n            get: function () {\r\n                return this._title;\r\n            },\r\n            set: function (title) {\r\n                this._title = title;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Movie.prototype, \"MovieType\", {\r\n            get: function () {\r\n                return this._movieType;\r\n            },\r\n            set: function (movieType) {\r\n                this._movieType = movieType;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Movie.prototype, \"Imdb\", {\r\n            get: function () {\r\n                return this._imdb;\r\n            },\r\n            set: function (imdb) {\r\n                this._imdb = imdb;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Movie.prototype, \"Id\", {\r\n            get: function () {\r\n                return this._id;\r\n            },\r\n            set: function (id) {\r\n                this._imdb = id;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Movie;\r\n    })();\r\n    MovieApp.Movie = Movie;\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MovieController = (function () {\r\n        function MovieController($scope, $routeParams, MovieService, movie) {\r\n            this.$scope = $scope;\r\n            this.$routeParams = $routeParams;\r\n            this.MovieService = MovieService;\r\n            this.movie = movie;\r\n            this.vm = {\r\n                viewtype: {\r\n                    carousel: false,\r\n                    mobile: true,\r\n                }\r\n            };\r\n            if (!_.isString(movie)) {\r\n                this.movieDetails = this.movie;\r\n            }\r\n            else {\r\n                this.vm.viewtype.carousel = false;\r\n                this.vm.viewtype.mobile = false;\r\n                this.showError = true;\r\n            }\r\n        }\r\n        MovieController.$inject = ['$scope', '$routeParams', 'MovieService', 'movie'];\r\n        return MovieController;\r\n    })();\r\n    MovieApp.MovieController = MovieController;\r\n    app.controller(\"MovieController\", MovieApp.MovieController);\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieDetailsCarousel() {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: '/Partials/Movie/Movie-Details-Carousel.html',\r\n            link: function (scope, element, attributes) {\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MovieDetailsCarousel = MovieDetailsCarousel;\r\n})(MovieApp || (MovieApp = {}));\r\napp.directive(\"movieDetailsCarousel\", MovieApp.MovieDetailsCarousel);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieDetailsMobile() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            templateUrl: '/Partials/Movie/Movie-Details-Mobile.html',\r\n            link: function (scope, element, attributes) {\r\n            },\r\n        };\r\n    }\r\n    MovieApp.MovieDetailsMobile = MovieDetailsMobile;\r\n})(MovieApp || (MovieApp = {}));\r\napp.directive(\"movieDetailsMobile\", MovieApp.MovieDetailsMobile);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MoviePoster(moviePosterFactory) {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                imdb: '@',\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                if (!scope.imdb)\r\n                    return;\r\n                var img = new Image();\r\n                moviePosterFactory.GetMoviePoster(scope.imdb).then(function (imageUrl) {\r\n                    img.src = imageUrl;\r\n                    //img.style.height = \"530px\";\r\n                    element.parent().append(img);\r\n                    element.remove();\r\n                });\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MoviePoster = MoviePoster;\r\n})(MovieApp || (MovieApp = {}));\r\nMovieApp.MoviePoster.$inject = ['moviePosterFactory'];\r\napp.directive(\"moviePoster\", MovieApp.MoviePoster);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MoviePosterFactory = (function () {\r\n        function MoviePosterFactory($q) {\r\n            this.$q = $q;\r\n            this.baseUrlMovie = \"https://api.themoviedb.org/3/movie/\";\r\n            this.baseUrlImage = \"http://image.tmdb.org/t/p/w\";\r\n            this.apikey = \"980071c1008d3dd64ab4a0893fe5a727\";\r\n        }\r\n        MoviePosterFactory.prototype.GetMoviePoster = function (imdb) {\r\n            var movieDetailsUrl = this.baseUrlMovie + imdb + \"?api_key=\" + this.apikey;\r\n            var defer = this.$q.defer();\r\n            $.get(movieDetailsUrl, function (response) {\r\n                var imageUrl = \"http://image.tmdb.org/t/p/w500\" + response.poster_path;\r\n                defer.resolve(imageUrl);\r\n            });\r\n            return defer.promise;\r\n        };\r\n        MoviePosterFactory.prototype.GetLargeMoviePoster = function (imdb) {\r\n            var movieDetailsUrl = this.baseUrlMovie + imdb + \"?api_key=\" + this.apikey;\r\n            var defer = this.$q.defer();\r\n            $.get(movieDetailsUrl, function (response) {\r\n                var imageUrl = \"http://image.tmdb.org/t/p/w500\" + response.poster_path;\r\n                defer.resolve(imageUrl);\r\n            });\r\n            return defer.promise;\r\n            //https://www.themoviedb.org/talk/53c11d4ec3a3684cf4006400\r\n        };\r\n        MoviePosterFactory.prototype.GetMovieThumb = function (imdb) {\r\n            var movieDetailsUrl = this.baseUrlMovie + imdb + \"?api_key=\" + this.apikey;\r\n            var defer = this.$q.defer();\r\n            $.get(movieDetailsUrl, function (response) {\r\n                var imageUrl = \"http://image.tmdb.org/t/p/w154\" + response.poster_path;\r\n                defer.resolve(imageUrl);\r\n            });\r\n            return defer.promise;\r\n        };\r\n        MoviePosterFactory.MoviePosterFactoryCreator = function ($q) {\r\n            return new MoviePosterFactory($q);\r\n        };\r\n        return MoviePosterFactory;\r\n    })();\r\n    MovieApp.MoviePosterFactory = MoviePosterFactory;\r\n})(MovieApp || (MovieApp = {}));\r\nMovieApp.MoviePosterFactory.MoviePosterFactoryCreator.$inject = ['$q'];\r\napp.factory('moviePosterFactory', MovieApp.MoviePosterFactory.MoviePosterFactoryCreator);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MovieSearchController = (function () {\r\n        function MovieSearchController($scope, movies) {\r\n            this.$scope = $scope;\r\n            this.movies = movies;\r\n            this.$scope.movies = movies;\r\n        }\r\n        MovieSearchController.$inject = ['$scope', 'movies'];\r\n        return MovieSearchController;\r\n    })();\r\n    MovieApp.MovieSearchController = MovieSearchController;\r\n    app.controller(\"MovieSearchController\", MovieApp.MovieSearchController);\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieThumb(moviePosterFactory) {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                imdb: '@',\r\n                thumbnail: '@',\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                var img = new Image();\r\n                if (scope.thumbnail) {\r\n                    img.src = scope.thumbnail;\r\n                    element.parent().append(img);\r\n                    element.remove();\r\n                }\r\n                else {\r\n                    moviePosterFactory.GetMovieThumb(scope.imdb).then(function (imageUrl) {\r\n                        img.src = imageUrl;\r\n                        element.parent().append(img);\r\n                        element.remove();\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MovieThumb = MovieThumb;\r\n})(MovieApp || (MovieApp = {}));\r\nMovieApp.MovieThumb.$inject = ['moviePosterFactory'];\r\napp.directive(\"movieThumb\", MovieApp.MovieThumb);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieTooltip($compile) {\r\n        return {\r\n            scope: true,\r\n            restrict: 'A',\r\n            compile: function (element, attributes) {\r\n                element.attr('ng-mouseover', 'showHover($event, y)');\r\n                element.attr('ng-mouseleave', 'hideHover()');\r\n                element.removeAttr(\"movie-tooltip\");\r\n                return {\r\n                    post: function (scope, iElement, attributes) {\r\n                        $compile(iElement)(scope);\r\n                    }\r\n                };\r\n            },\r\n            controller: ['$scope', '$compile', 'MovieService', function ($scope, $compile, movieService) {\r\n                    $scope.showHover = function ($event, movie) {\r\n                        $scope.loading = false;\r\n                        if ((!movie.Plot || movie.Plot.length < 1) && !$scope.loading) {\r\n                            $scope.loading = true;\r\n                            movieService.getMovieById(movie.ProviderId).then(function (response) {\r\n                                movie.Plot = response.Plot;\r\n                                $scope.loading = false;\r\n                            });\r\n                        }\r\n                        $scope.movie = movie;\r\n                        showTooltip($event.pageY, $event.pageX);\r\n                    };\r\n                    $scope.hideHover = function () {\r\n                        angular.element(\"#movieTooltip\").remove();\r\n                    };\r\n                    function showTooltip(top, left) {\r\n                        angular.element(\"#movieTooltip\").remove();\r\n                        var xPos = 400 + left;\r\n                        if (xPos >= window.innerWidth) {\r\n                            left = left - 400;\r\n                        }\r\n                        var template = '<div class=\"movie-tooltip\" id=\"movieTooltip\" style=\"top:' + top + 'px; left:' + left + 'px;\">' +\r\n                            '<div style=\"font-size:0.8em;float:right;\">Duur: {{movie.Duration}}min.</div>' +\r\n                            '<b>{{movie.Title}}</b><br/>{{movie.Plot}}' +\r\n                            '<div data-ng-show=\"loading\"><img src=\"/Content/ajax-loader.gif\" /></div>' +\r\n                            '</div>';\r\n                        var htmlCompiled = $compile(template)($scope);\r\n                        angular.element('body').append($(htmlCompiled));\r\n                    }\r\n                }],\r\n        };\r\n    }\r\n    MovieApp.MovieTooltip = MovieTooltip;\r\n    MovieTooltip.$inject = ['$compile'];\r\n})(MovieApp || (MovieApp = {}));\r\napp.directive(\"movieTooltip\", MovieApp.MovieTooltip);\r\n//angular.module('movieApp').directive(\"movieTooltip\", ['$compile', function ($compile) {\r\n//    return {\r\n//        restrict: 'A',\r\n//        compile: function (element, attributes) {\r\n//            element.attr('ng-mouseover', 'showHover($event, y)');\r\n//            element.attr('ng-mouseleave', 'hideHover()');\r\n//            element.removeAttr(\"movie-tooltip\");\r\n//            return {\r\n//                post: function (scope, iElement, attributes) {\r\n//                    $compile(iElement)(scope);\r\n//                    scope.showHover = function ($event, movie) {\r\n//                        scope.movie = movie;\r\n//                        showTooltip($event.pageY, $event.pageX);\r\n//                    }\r\n//                    scope.hideHover = function () {\r\n//                        angular.element(\"#movieTooltip\").remove();\r\n//                    }\r\n//                    function showTooltip(top, left) {\r\n//                        angular.element(\"#movieTooltip\").remove();\r\n//                        var xPos = 400 + left;\r\n//                        if (xPos >= window.innerWidth) {\r\n//                            left = left - 400;\r\n//                        }\r\n//                        var template =\r\n//                            '<div class=\"movie-tooltip\" id=\"movieTooltip\" style=\"top:' + top + 'px; left:' + left + 'px;\">' +\r\n//                            '<div style=\"font-size:0.8em;float:right;\">Duur: {{movie.Duration}}min.</div>' +\r\n//                            '<b>{{movie.Title}}</b><br/>{{movie.Plot}}' +\r\n//                            '</div>';\r\n//                        var htmlCompiled = $compile(template)(scope);\r\n//                        angular.element('body').append($(htmlCompiled));\r\n//                    }\r\n//                }\r\n//            }\r\n//        }\r\n//    }\r\n//}]);  \r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieTrailer() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                url: '@',\r\n                width: '@',\r\n                height: '@',\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                if (!scope.url)\r\n                    return;\r\n                var iframe = document.createElement(\"IFRAME\");\r\n                iframe.src = scope.url;\r\n                if (scope.width)\r\n                    iframe.width = scope.width;\r\n                if (scope.height)\r\n                    iframe.height = scope.height;\r\n                iframe.frameBorder = \"0\";\r\n                iframe.scrolling = \"false\";\r\n                iframe.setAttribute(\"allowfullscreen\", \"\");\r\n                element.parent().append(iframe);\r\n                element.remove();\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MovieTrailer = MovieTrailer;\r\n})(MovieApp || (MovieApp = {}));\r\napp.directive(\"movieTrailer\", MovieApp.MovieTrailer);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieOverview() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                movies: '=',\r\n            },\r\n            templateUrl: \"/Partials/Movie/MovieOverview.html\",\r\n            link: function (scope, element, attributes) {\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MovieOverview = MovieOverview;\r\n})(MovieApp || (MovieApp = {}));\r\napp.directive(\"movieOverview\", MovieApp.MovieOverview);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MovieOverviewController = (function () {\r\n        function MovieOverviewController($scope, movies, downloadListRepository, moviePosterFactory, movieService) {\r\n            this.$scope = $scope;\r\n            this.movies = movies;\r\n            this.downloadListRepository = downloadListRepository;\r\n            this.moviePosterFactory = moviePosterFactory;\r\n            this.movieService = movieService;\r\n            this.currentImdb = \"-1\";\r\n            this.$scope.movies = [];\r\n            for (var date in this.movies) {\r\n                var list = this.movies[date];\r\n                var obj = { date: date, movies: list };\r\n                this.$scope.movies.push(obj);\r\n            }\r\n        }\r\n        MovieOverviewController.prototype.toggleExtraInfo = function (movie) {\r\n            var moviebox = $(\"#\" + movie.Imdb);\r\n            var movieboxParent = $(moviebox).parent();\r\n            var nextMovieParent = $(movieboxParent).next();\r\n            var plot = moviebox.next();\r\n            // collapse previous opened movie box\r\n            if (this.currentImdb != \"-1\") {\r\n                var currentMoviebox = $(\"#\" + this.currentImdb);\r\n                this.collapseDiv(currentMoviebox.parent(), 215);\r\n                currentMoviebox.parent().removeClass('expanded');\r\n                currentMoviebox.next().hide();\r\n            }\r\n            // collapse current opened moviebox\r\n            if (movie.Imdb == this.currentImdb) {\r\n                movieboxParent.removeClass('expanded');\r\n                this.collapseDiv(movieboxParent, 215);\r\n                plot.hide();\r\n                this.currentImdb = \"-1\";\r\n            }\r\n            else {\r\n                //expend new moviebox\r\n                movieboxParent.addClass('expanded');\r\n                this.expandDiv(movieboxParent, 600);\r\n                plot.show();\r\n                this.currentImdb = movie.Imdb;\r\n            }\r\n        };\r\n        MovieOverviewController.prototype.expandDiv = function (element, endSize) {\r\n            var totalWidth = element.width();\r\n            var stepSize = 10;\r\n            var handle = setInterval(function () {\r\n                element.css('width', totalWidth + stepSize + 'px');\r\n                totalWidth += stepSize;\r\n                if (totalWidth >= endSize) {\r\n                    clearInterval(handle);\r\n                }\r\n            }, 5);\r\n        };\r\n        MovieOverviewController.prototype.collapseDiv = function (element, endSize) {\r\n            var totalWidth = element.width();\r\n            var stepSize = 10;\r\n            var handle = setInterval(function () {\r\n                element.css('width', totalWidth - stepSize + 'px');\r\n                totalWidth -= stepSize;\r\n                if (totalWidth <= endSize) {\r\n                    clearInterval(handle);\r\n                }\r\n            }, 5);\r\n        };\r\n        MovieOverviewController.prototype.addMovieToDownloadList = function (movie) {\r\n            this.downloadListRepository.AddMovieToDownloadList(movie);\r\n        };\r\n        MovieOverviewController.prototype.deleteMovieFromDownloadList = function (movie) {\r\n            this.downloadListRepository.deleteFromDownloadListByMovie(movie);\r\n        };\r\n        MovieOverviewController.prototype.showMovieDetails = function (providerId) {\r\n            this.movieService.getMovieById(providerId);\r\n        };\r\n        MovieOverviewController.prototype.IsMoviePresentInDownloadlist = function (movie) {\r\n            return this.downloadListRepository.IsMovieInDownloadList(movie);\r\n        };\r\n        MovieOverviewController.$inject = ['$scope', 'movies', 'DownloadListRepository', 'moviePosterFactory', 'MovieService'];\r\n        return MovieOverviewController;\r\n    })();\r\n    MovieApp.MovieOverviewController = MovieOverviewController;\r\n    app.controller(\"MovieOverviewController\", MovieApp.MovieOverviewController);\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function EmailValidation() {\r\n        return {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            link: function (scope, elem, attrs, ctrl) {\r\n                if (!ctrl) {\r\n                    return false;\r\n                }\r\n                function isValidEmail(value) {\r\n                    if (!value) {\r\n                        return false;\r\n                    }\r\n                    // Email Regex used by ASP.Net MVC\r\n                    var regex = /^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/i;\r\n                    return regex.exec(value) != null;\r\n                }\r\n                scope.$watch(ctrl, function () {\r\n                    ctrl.$validate();\r\n                });\r\n                ctrl.$validators.email = function (modelValue, viewValue) {\r\n                    return isValidEmail(viewValue);\r\n                };\r\n            }\r\n        };\r\n    }\r\n    MovieApp.EmailValidation = EmailValidation;\r\n})(MovieApp || (MovieApp = {}));\r\nMovieApp.EmailValidation.$inject = [];\r\napp.directive(\"email\", MovieApp.EmailValidation);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var WatchlistItem = (function () {\r\n        function WatchlistItem() {\r\n        }\r\n        Object.defineProperty(WatchlistItem.prototype, \"Id\", {\r\n            get: function () {\r\n                return this._id;\r\n            },\r\n            set: function (id) {\r\n                this._id = id;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(WatchlistItem.prototype, \"Movie\", {\r\n            get: function () {\r\n                return this._movie;\r\n            },\r\n            set: function (movie) {\r\n                this._movie = movie;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return WatchlistItem;\r\n    })();\r\n    MovieApp.WatchlistItem = WatchlistItem;\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MovieService = (function () {\r\n        function MovieService($http, $q, $window, $location) {\r\n            this.$http = $http;\r\n            this.$q = $q;\r\n            this.$window = $window;\r\n            this.$location = $location;\r\n            this.GetMovieByImdb = function (imdb) {\r\n                return this.HandleGetRequest(\"api/Movie/GetByImdb?imdb=\" + imdb).then(function (response) {\r\n                    return response;\r\n                }, function (rejection) {\r\n                    return rejection.data; // this will contain the error message\r\n                });\r\n            };\r\n            this.SearchMovie = function (movieName) {\r\n                return this.HandleGetRequest(\"api/Movie/search?movieName=\" + movieName).then(function (response) {\r\n                    return response;\r\n                });\r\n            };\r\n            this.GetMoviesForRent = function () {\r\n                var defer = this.$q.defer();\r\n                var movies = this.$window.sessionStorage.getItem('movies');\r\n                if (movies) {\r\n                    var data = angular.fromJson(movies);\r\n                    defer.resolve(data);\r\n                }\r\n                else {\r\n                    this.HandleGetRequest(\"/api/Rent\").then(function (response) {\r\n                        var data = angular.toJson(response);\r\n                        sessionStorage.setItem('movies', data);\r\n                        defer.resolve(response);\r\n                    });\r\n                }\r\n                return defer.promise;\r\n            };\r\n            this.GetMoviesInCinema = function () {\r\n                var defer = this.$q.defer();\r\n                var movies = sessionStorage.getItem('cinemaMovies');\r\n                if (movies) {\r\n                    var data = angular.fromJson(movies);\r\n                    defer.resolve(data);\r\n                }\r\n                else {\r\n                    this.HandleGetRequest(\"api/Cinema\").then(function (response) {\r\n                        var data = angular.toJson(response);\r\n                        sessionStorage.setItem('cinemaMovies', data);\r\n                        defer.resolve(response);\r\n                    });\r\n                }\r\n                return defer.promise;\r\n            };\r\n            this.GetMoviesSoonInCinema = function () {\r\n                var defer = this.$q.defer();\r\n                var movies; // = sessionStorage.getItem('soonInCinemaMovies');\r\n                if (movies) {\r\n                    var data = angular.fromJson(movies);\r\n                    defer.resolve(data);\r\n                }\r\n                else {\r\n                    this.HandleGetRequest(\"api/SoonInCinema\").then(function (response) {\r\n                        var data = angular.toJson(response);\r\n                        sessionStorage.setItem('soonInCinemaMovies', data);\r\n                        defer.resolve(response);\r\n                    });\r\n                }\r\n                return defer.promise;\r\n            };\r\n            this.GetMoviePoster = function (imdbId) {\r\n                return this.$http.get(\"https://api.themoviedb.org/3/movie/tt\" + imdbId + \"?api_key=980071c1008d3dd64ab4a0893fe5a727\").then(function (response) {\r\n                    return response.data;\r\n                });\r\n            };\r\n            this.getMovieById = function (providerId) {\r\n                return this.$http.get(\"api/Movie/GetById?id=\" + providerId).then(function (response) {\r\n                    return response.data;\r\n                });\r\n            };\r\n            this.shareMovieWithFriend = function (email, message) {\r\n                var data = {\r\n                    Email: email,\r\n                    Message: message\r\n                };\r\n                return this.$http.post(\"api/Movie/ShareMovieWithFriend\", data);\r\n            };\r\n        }\r\n        MovieService.prototype.ClearSessionStorage = function () {\r\n            sessionStorage.clear();\r\n        };\r\n        MovieService.prototype.HandleGetRequest = function (path) {\r\n            return this.$http.get(path).then(function (response) {\r\n                return response.data;\r\n            });\r\n        };\r\n        MovieService.$inject = ['$http', '$q', '$window', '$location'];\r\n        return MovieService;\r\n    })();\r\n    MovieApp.MovieService = MovieService;\r\n})(MovieApp || (MovieApp = {}));\r\napp.service(\"MovieService\", MovieApp.MovieService);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var ShareForm = (function () {\r\n        function ShareForm() {\r\n            this.emailAddress = \"\";\r\n            this.message = \"\";\r\n        }\r\n        return ShareForm;\r\n    })();\r\n    function ShareButton(MovieService) {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: '/Movie/Sharing/movie-share-button.html',\r\n            scope: {\r\n                movie: '=',\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                scope.vm = {\r\n                    form: new ShareForm(),\r\n                    modelId: \"share-movie-modal\" + scope.movie.Imdb,\r\n                    showSharePopup: showSharePopup,\r\n                    sendMail: sendMail,\r\n                    isFormValid: isFormValid\r\n                };\r\n                function showSharePopup(movie) {\r\n                    scope.vm.form = new ShareForm();\r\n                    getPopup().modal('toggle');\r\n                }\r\n                function sendMail() {\r\n                    MovieService.shareMovieWithFriend(scope.vm.form.emailAddress, scope.vm.form.message).then(mailSendSuccess, mailSendFailed);\r\n                }\r\n                function isFormValid() {\r\n                    return scope.shareForm.$valid;\r\n                }\r\n                function mailSendSuccess() {\r\n                    getPopup().modal('hide');\r\n                    toastr.success(\"Mail verzonden\", \"Je e-mail is verzondenaan je vriend(in)!\");\r\n                }\r\n                function mailSendFailed() {\r\n                    getPopup().modal('hide');\r\n                    toastr.success(\"Hmm...\", \"Er is een fout opgetreden bij het verzenden van de mail... Kak\");\r\n                }\r\n                function getPopup() {\r\n                    return angular.element(\"#\" + scope.vm.modelId);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    MovieApp.ShareButton = ShareButton;\r\n})(MovieApp || (MovieApp = {}));\r\nMovieApp.ShareButton.$inject = ['MovieService'];\r\napp.directive(\"movieShareButton\", MovieApp.ShareButton);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function WatchlistButton(DownloadListRepository) {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: '/Watchlist/watchlist-button.html',\r\n            scope: {\r\n                movie: '=',\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                scope.vm = {\r\n                    addMovieToDownloadList: addMovieToDownloadList,\r\n                    deleteMovieFromDownloadList: deleteMovieFromDownloadList,\r\n                    isMoviePresentInDownloadlist: isMoviePresentInDownloadlist\r\n                };\r\n                function addMovieToDownloadList() {\r\n                    DownloadListRepository.AddMovieToDownloadList(scope.movie);\r\n                }\r\n                function deleteMovieFromDownloadList() {\r\n                    DownloadListRepository.deleteFromDownloadListByMovie(scope.movie);\r\n                }\r\n                function isMoviePresentInDownloadlist() {\r\n                    return DownloadListRepository.IsMovieInDownloadList(scope.movie);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    MovieApp.WatchlistButton = WatchlistButton;\r\n})(MovieApp || (MovieApp = {}));\r\nMovieApp.WatchlistButton.$inject = ['DownloadListRepository'];\r\napp.directive(\"watchlistButton\", MovieApp.WatchlistButton);\r\n"],"sourceRoot":"/source/"}