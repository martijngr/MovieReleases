{"version":3,"sources":["app.js","HomeController.js","routings.js","DownloadList/DownloadListRepository.js","DownloadList/DownloadListService.js","DownloadList/MovieBase.js","DownloadList/MovieToFollow.js","Interceptors/SignalRInterceptor.js","Overview/MovieOverview.js","Overview/MovieOverviewController.js","movie/Movie.js","movie/MovieController.js","movie/MoviePoster.js","movie/MoviePosterRepository.js","movie/MovieService.js","movie/MovieThumb.js","movie/MovieToolTip.js","movie/MovieTrailer.js"],"names":[],"mappings":"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","file":"all.min.js","sourcesContent":["/// <reference path=\"../../Scripts/typings/angularjs/angular.d.ts\"/>\r\n/// <reference path=\"../../Scripts/typings/angularjs/angular-route.d.ts\"/>\r\n/// <reference path=\"../../Scripts/typings/underscore/underscore.d.ts\"/>\r\n/// <reference path=\"../../scripts/typings/jquery/jquery.d.ts\" />\r\n/// <reference path=\"../../scripts/typings/toastr/toastr.d.ts\" />\r\nvar app = angular.module('movieApp', ['ngRoute']);\r\n\r\napp.run([\r\n    '$http', '$rootScope', '$timeout', function ($http, $rootScope, $timeout) {\r\n        $http.get(\"/Home/StartNotificationService\");\r\n\r\n        $rootScope.$on('$routeChangeStart', function () {\r\n            $(\"#page-loader\").show();\r\n        });\r\n\r\n        $rootScope.$on('$routeChangeSuccess', function () {\r\n            $timeout(function () {\r\n                $(\"#page-loader\").hide();\r\n            });\r\n        });\r\n    }]);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var HomeController = (function () {\r\n        function HomeController($scope, $location, downloadListRepository) {\r\n            var _this = this;\r\n            this.$scope = $scope;\r\n            this.$location = $location;\r\n            this.downloadListRepository = downloadListRepository;\r\n            this.$scope.$on('$locationChangeSuccess', function (event) {\r\n                _this.setActiveUrlPart();\r\n            });\r\n\r\n            $scope.movieTypeFilter = 3;\r\n\r\n            downloadListRepository.GetMoviesToDownload().then(function (response) {\r\n                _this.$scope.moviesToDownload = response;\r\n            });\r\n        }\r\n        HomeController.prototype.setActiveUrlPart = function () {\r\n            var parts = this.$location.path().split('/');\r\n            this.$scope.active = parts[1];\r\n        };\r\n\r\n        Object.defineProperty(HomeController.prototype, \"moviesToDownload\", {\r\n            get: function () {\r\n                return this.$scope.moviesToDownload;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        HomeController.prototype.markMovieAsDownloaded = function (movie) {\r\n            movie.Downloaded = true;\r\n        };\r\n        HomeController.$inject = [\r\n            '$scope',\r\n            '$location',\r\n            'DownloadListRepository'\r\n        ];\r\n        return HomeController;\r\n    })();\r\n    MovieApp.HomeController = HomeController;\r\n})(MovieApp || (MovieApp = {}));\r\n\r\napp.controller(\"HomeController\", MovieApp.HomeController);\r\n","app.config([\r\n    \"$routeProvider\", function ($routeProvider) {\r\n        $routeProvider.when('/Cinema', {\r\n            templateUrl: '/Partials/Movie/MovieOverview.html',\r\n            controller: 'MovieOverviewController',\r\n            controllerAs: 'movieCtrl',\r\n            resolve: {\r\n                movies: [\r\n                    'MovieService', function (MovieService) {\r\n                        return MovieService.GetMoviesInCinema();\r\n                    }]\r\n            }\r\n        }).when('/SoonInCinema', {\r\n            templateUrl: '/Partials/Movie/MovieOverview.html',\r\n            controller: 'MovieOverviewController',\r\n            controllerAs: 'movieCtrl',\r\n            resolve: {\r\n                movies: [\r\n                    'MovieService', function (MovieService) {\r\n                        return MovieService.GetMoviesSoonInCinema();\r\n                    }]\r\n            }\r\n        }).when('/Rent', {\r\n            templateUrl: '/Partials/Movie/MovieOverview.html',\r\n            controller: 'MovieOverviewController',\r\n            controllerAs: 'movieCtrl',\r\n            resolve: {\r\n                movies: [\r\n                    'MovieService', function (MovieService) {\r\n                        return MovieService.GetMoviesForRent();\r\n                    }]\r\n            }\r\n        }).when('/Movie/:imdb', {\r\n            templateUrl: '/Partials/Movie/Details.html',\r\n            controller: 'MovieController',\r\n            controllerAs: 'movieCtrl',\r\n            resolve: {\r\n                movie: [\r\n                    '$route', 'MovieService', function ($route, MovieService) {\r\n                        return MovieService.GetMovieByImdb($route.current.params.imdb);\r\n                    }]\r\n            }\r\n        }).otherwise({\r\n            redirectTo: '/Rent'\r\n        });\r\n    }]);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var DownloadListRepository = (function () {\r\n        function DownloadListRepository($http, $q, $window) {\r\n            this.$http = $http;\r\n            this.$q = $q;\r\n            this.$window = $window;\r\n            this.GetMoviesToDownload = function () {\r\n                return this.$http.get(\"/api/DownloadList/\").then(function (response) {\r\n                    return response.data;\r\n                });\r\n            };\r\n            this.DeleteMovieFromDownloadList = function (movie) {\r\n                return this.$http.delete(\"/api/DownloadList/\" + movie.Imdb).then(function (response) {\r\n                    return response;\r\n                });\r\n            };\r\n        }\r\n        DownloadListRepository.prototype.AddMovieToDownloadList = function (movie) {\r\n            return this.$http.post(\"/api/DownloadList/\", movie).then(function (response) {\r\n                return response.data;\r\n            });\r\n        };\r\n        DownloadListRepository.$inject = ['$http', '$q', '$window'];\r\n        return DownloadListRepository;\r\n    })();\r\n    MovieApp.DownloadListRepository = DownloadListRepository;\r\n})(MovieApp || (MovieApp = {}));\r\n\r\napp.service(\"DownloadListRepository\", MovieApp.DownloadListRepository);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var DownloadListService = (function () {\r\n        function DownloadListService() {\r\n        }\r\n        DownloadListService.prototype.AddMovieToDownloadList = function (movie) {\r\n        };\r\n        return DownloadListService;\r\n    })();\r\n    MovieApp.DownloadListService = DownloadListService;\r\n})(MovieApp || (MovieApp = {}));\r\n\r\napp.service(\"DownloadListService\", MovieApp.DownloadListService);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MovieBase = (function () {\r\n        function MovieBase() {\r\n        }\r\n        Object.defineProperty(MovieBase.prototype, \"Title\", {\r\n            get: function () {\r\n                return this._title;\r\n            },\r\n            set: function (title) {\r\n                this._title = title;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(MovieBase.prototype, \"MovieType\", {\r\n            get: function () {\r\n                return this._movieType;\r\n            },\r\n            set: function (movieType) {\r\n                this._movieType = movieType;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(MovieBase.prototype, \"Imdb\", {\r\n            get: function () {\r\n                return this._imdb;\r\n            },\r\n            set: function (imdb) {\r\n                this._imdb = imdb;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return MovieBase;\r\n    })();\r\n    MovieApp.MovieBase = MovieBase;\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MovieToFollow = (function () {\r\n        function MovieToFollow() {\r\n        }\r\n        Object.defineProperty(MovieToFollow.prototype, \"Title\", {\r\n            get: function () {\r\n                return this._title;\r\n            },\r\n            set: function (title) {\r\n                this._title = title;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(MovieToFollow.prototype, \"MovieType\", {\r\n            get: function () {\r\n                return this._movieType;\r\n            },\r\n            set: function (movieType) {\r\n                this._movieType = movieType;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(MovieToFollow.prototype, \"Imdb\", {\r\n            get: function () {\r\n                return this._imdb;\r\n            },\r\n            set: function (imdb) {\r\n                this._imdb = imdb;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return MovieToFollow;\r\n    })();\r\n    MovieApp.MovieToFollow = MovieToFollow;\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var SignalRInterceptor = (function () {\r\n        function SignalRInterceptor() {\r\n        }\r\n        return SignalRInterceptor;\r\n    })();\r\n    MovieApp.SignalRInterceptor = SignalRInterceptor;\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieOverview() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                movies: '='\r\n            },\r\n            templateUrl: \"/Partials/Movie/MovieOverview.html\",\r\n            link: function (scope, element, attributes) {\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MovieOverview = MovieOverview;\r\n})(MovieApp || (MovieApp = {}));\r\n\r\napp.directive(\"movieOverview\", MovieApp.MovieOverview);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MovieOverviewController = (function () {\r\n        function MovieOverviewController($scope, movies, downloadListRepository) {\r\n            this.$scope = $scope;\r\n            this.movies = movies;\r\n            this.downloadListRepository = downloadListRepository;\r\n            this.$scope.movies = [];\r\n\r\n            for (var date in this.movies) {\r\n                var list = this.movies[date];\r\n                var obj = { date: date, movies: list };\r\n\r\n                this.$scope.movies.push(obj);\r\n            }\r\n        }\r\n        MovieOverviewController.prototype.addMovieToDownloadList = function (movie) {\r\n            movie.InDownloadList = true;\r\n            this.downloadListRepository.AddMovieToDownloadList(movie);\r\n            this.$scope.moviesToDownload.push(movie);\r\n        };\r\n\r\n        MovieOverviewController.prototype.deleteMovieFromDownloadList = function (movie) {\r\n            var _this = this;\r\n            this.downloadListRepository.DeleteMovieFromDownloadList(movie).then(function () {\r\n                movie.InDownloadList = false;\r\n                angular.copy(_.without(_this.$scope.moviesToDownload, movie), _this.$scope.moviesToDownload);\r\n            });\r\n        };\r\n        MovieOverviewController.$inject = ['$scope', 'movies', 'DownloadListRepository'];\r\n        return MovieOverviewController;\r\n    })();\r\n    MovieApp.MovieOverviewController = MovieOverviewController;\r\n\r\n    app.controller(\"MovieOverviewController\", MovieApp.MovieOverviewController);\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var Movie = (function () {\r\n        function Movie() {\r\n        }\r\n        Object.defineProperty(Movie.prototype, \"Url\", {\r\n            get: function () {\r\n                return this._url;\r\n            },\r\n            set: function (url) {\r\n                this._url = url;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(Movie.prototype, \"Year\", {\r\n            get: function () {\r\n                return this._year;\r\n            },\r\n            set: function (year) {\r\n                this._year = year;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(Movie.prototype, \"Thumbnail\", {\r\n            get: function () {\r\n                return this._thumbnail;\r\n            },\r\n            set: function (thumbnail) {\r\n                this._thumbnail = thumbnail;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(Movie.prototype, \"Plot\", {\r\n            get: function () {\r\n                return this._plot;\r\n            },\r\n            set: function (plot) {\r\n                this._plot = plot;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(Movie.prototype, \"Duration\", {\r\n            get: function () {\r\n                return this._duration;\r\n            },\r\n            set: function (duration) {\r\n                this._duration = duration;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(Movie.prototype, \"Downloaded\", {\r\n            get: function () {\r\n                return this._downloaded;\r\n            },\r\n            set: function (downloaded) {\r\n                this._downloaded = downloaded;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(Movie.prototype, \"Title\", {\r\n            get: function () {\r\n                return this._title;\r\n            },\r\n            set: function (title) {\r\n                this._title = title;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(Movie.prototype, \"MovieType\", {\r\n            get: function () {\r\n                return this._movieType;\r\n            },\r\n            set: function (movieType) {\r\n                this._movieType = movieType;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(Movie.prototype, \"Imdb\", {\r\n            get: function () {\r\n                return this._imdb;\r\n            },\r\n            set: function (imdb) {\r\n                this._imdb = imdb;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n\r\n        Object.defineProperty(Movie.prototype, \"InDownloadList\", {\r\n            get: function () {\r\n                return this._inDownloadList;\r\n            },\r\n            set: function (inDownloadList) {\r\n                this._inDownloadList = inDownloadList;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Movie;\r\n    })();\r\n    MovieApp.Movie = Movie;\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MovieController = (function () {\r\n        function MovieController($scope, $routeParams, MovieService, movie) {\r\n            this.$scope = $scope;\r\n            this.$routeParams = $routeParams;\r\n            this.MovieService = MovieService;\r\n            this.movie = movie;\r\n            this.movieDetails = this.movie;\r\n        }\r\n        MovieController.$inject = ['$scope', '$routeParams', 'MovieService', 'movie'];\r\n        return MovieController;\r\n    })();\r\n    MovieApp.MovieController = MovieController;\r\n\r\n    app.controller(\"MovieController\", MovieApp.MovieController);\r\n})(MovieApp || (MovieApp = {}));\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MoviePoster(moviePosterFactory) {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                imdb: '@'\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                var img = new Image();\r\n\r\n                moviePosterFactory.GetMoviePoster(scope.imdb).then(function (imageUrl) {\r\n                    img.src = imageUrl;\r\n                    img.style.height = \"530px\";\r\n                    element.parent().append(img);\r\n                    element.remove();\r\n                });\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MoviePoster = MoviePoster;\r\n})(MovieApp || (MovieApp = {}));\r\n\r\nMovieApp.MoviePoster.$inject = ['moviePosterFactory'];\r\n\r\napp.directive(\"moviePoster\", MovieApp.MoviePoster);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MoviePosterFactory = (function () {\r\n        function MoviePosterFactory($q) {\r\n            this.$q = $q;\r\n            this.baseUrlMovie = \"https://api.themoviedb.org/3/movie/\";\r\n            this.baseUrlImage = \"http://image.tmdb.org/t/p/w\";\r\n            this.apikey = \"980071c1008d3dd64ab4a0893fe5a727\";\r\n        }\r\n        MoviePosterFactory.prototype.GetMoviePoster = function (imdb) {\r\n            var movieDetailsUrl = this.baseUrlMovie + imdb + \"?api_key=\" + this.apikey;\r\n            var defer = this.$q.defer();\r\n\r\n            $.get(movieDetailsUrl, function (response) {\r\n                var imageUrl = \"http://image.tmdb.org/t/p/w500\" + response.poster_path;\r\n\r\n                defer.resolve(imageUrl);\r\n            });\r\n\r\n            return defer.promise;\r\n        };\r\n\r\n        //public GetMovieTrailer(imdb: string): ng.IPromise<string> {\r\n        //    var\r\n        //}\r\n        MoviePosterFactory.prototype.GetMovieThumb = function (imdb) {\r\n            var movieDetailsUrl = this.baseUrlMovie + imdb + \"?api_key=\" + this.apikey;\r\n            var defer = this.$q.defer();\r\n\r\n            $.get(movieDetailsUrl, function (response) {\r\n                var imageUrl = \"http://image.tmdb.org/t/p/w154\" + response.poster_path;\r\n\r\n                defer.resolve(imageUrl);\r\n            });\r\n\r\n            return defer.promise;\r\n        };\r\n\r\n        MoviePosterFactory.MoviePosterFactoryCreator = function ($q) {\r\n            return new MoviePosterFactory($q);\r\n        };\r\n        return MoviePosterFactory;\r\n    })();\r\n    MovieApp.MoviePosterFactory = MoviePosterFactory;\r\n})(MovieApp || (MovieApp = {}));\r\nMovieApp.MoviePosterFactory.MoviePosterFactoryCreator.$inject = ['$q'];\r\n\r\napp.factory('moviePosterFactory', MovieApp.MoviePosterFactory.MoviePosterFactoryCreator);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    var MovieService = (function () {\r\n        function MovieService($http, $q, $window) {\r\n            this.$http = $http;\r\n            this.$q = $q;\r\n            this.$window = $window;\r\n            this.GetMovieByImdb = function (imdb) {\r\n                return this.HandleGetRequest(\"api/Movie?movieMeterId=\" + imdb).then(function (response) {\r\n                    return response;\r\n                });\r\n            };\r\n            this.GetMoviesForRent = function () {\r\n                var defer = this.$q.defer();\r\n                var movies = this.$window.sessionStorage.getItem('movies');\r\n\r\n                if (movies) {\r\n                    var data = angular.fromJson(movies);\r\n                    defer.resolve(data);\r\n                } else {\r\n                    this.HandleGetRequest(\"/api/Rent\").then(function (response) {\r\n                        var data = angular.toJson(response);\r\n                        sessionStorage.setItem('movies', data);\r\n\r\n                        defer.resolve(response);\r\n                    });\r\n                }\r\n\r\n                return defer.promise;\r\n            };\r\n            this.GetMoviesInCinema = function () {\r\n                var defer = this.$q.defer();\r\n                var movies = sessionStorage.getItem('cinemaMovies');\r\n\r\n                if (movies) {\r\n                    var data = angular.fromJson(movies);\r\n                    defer.resolve(data);\r\n                } else {\r\n                    this.HandleGetRequest(\"api/Cinema\").then(function (response) {\r\n                        var data = angular.toJson(response);\r\n                        sessionStorage.setItem('cinemaMovies', data);\r\n\r\n                        defer.resolve(response);\r\n                    });\r\n                }\r\n\r\n                return defer.promise;\r\n            };\r\n            this.GetMoviesSoonInCinema = function () {\r\n                var defer = this.$q.defer();\r\n                var movies;\r\n\r\n                if (movies) {\r\n                    var data = angular.fromJson(movies);\r\n                    defer.resolve(data);\r\n                } else {\r\n                    this.HandleGetRequest(\"api/SoonInCinema\").then(function (response) {\r\n                        var data = angular.toJson(response);\r\n                        sessionStorage.setItem('soonInCinemaMovies', data);\r\n\r\n                        defer.resolve(response);\r\n                    });\r\n                }\r\n\r\n                return defer.promise;\r\n            };\r\n            this.GetMoviePoster = function (imdbId) {\r\n                return this.$http.get(\"https://api.themoviedb.org/3/movie/tt\" + imdbId + \"?api_key=980071c1008d3dd64ab4a0893fe5a727\").then(function (response) {\r\n                    return response.data;\r\n                });\r\n            };\r\n        }\r\n        MovieService.prototype.ClearSessionStorage = function () {\r\n            sessionStorage.clear();\r\n        };\r\n\r\n        MovieService.prototype.HandleGetRequest = function (path) {\r\n            return this.$http.get(path).then(function (response) {\r\n                return response.data;\r\n            });\r\n        };\r\n        MovieService.$inject = ['$http', '$q', '$window'];\r\n        return MovieService;\r\n    })();\r\n    MovieApp.MovieService = MovieService;\r\n})(MovieApp || (MovieApp = {}));\r\n\r\napp.service(\"MovieService\", MovieApp.MovieService);\r\n//angular.module('movieapp').service(\"movieservice\", ['$http', '$q', function ($http, $q) {\r\n//    this.addmovietodownloadlist = function (movie) {\r\n//        return handlepostrequest(\"addmovietodownloadlist\", movie);\r\n//    }\r\n//    this.clearsessionstorage = function () {\r\n//        sessionstorage.clear();\r\n//    }\r\n//    this.deletemoviefromdownloadlist = function (movie) {\r\n//        return $http.delete(\"/api/moviesapi/deletemoviefromdownloadlist?imdbid=\" + movie.imdbid).then(function (response) {\r\n//            return response;\r\n//        });\r\n//    }\r\n//    this.getmoviesforrent = function () {\r\n//        //var item = {'2014-04-27': [{moviemeterid: 83495,\r\n//        //    title: 'samsara',\r\n//        //    thumbnail: \"\",\r\n//        //    imdbid: \"0770802\"}]};\r\n//        //var items = [item];\r\n//        //return item;\r\n//        var defer = $q.defer();\r\n//        var movies = sessionstorage.getitem('movies');\r\n//        if (movies) {\r\n//            var data = angular.fromjson(movies);\r\n//            defer.resolve(data);\r\n//        }\r\n//        else {\r\n//            handlegetrequest(\"getmoviesoutondvd\").then(function (response) {\r\n//                var data = angular.tojson(response);\r\n//                sessionstorage.setitem('movies', data);\r\n//                defer.resolve(response);\r\n//            })\r\n//        }\r\n//        return defer.promise;\r\n//    }\r\n//    this.getmoviesincinema = function () {\r\n//        var defer = $q.defer();\r\n//        var movies = sessionstorage.getitem('cinemamovies');\r\n//        if (movies) {\r\n//            var data = angular.fromjson(movies);\r\n//            defer.resolve(data);\r\n//        }\r\n//        else {\r\n//            handlegetrequest(\"getmoviesincinema\").then(function (response) {\r\n//                var data = angular.tojson(response);\r\n//                sessionstorage.setitem('cinemamovies', data);\r\n//                defer.resolve(response);\r\n//            })\r\n//        }\r\n//        return defer.promise;\r\n//    }\r\n//    this.getmovieposter = function (imdbid) {\r\n//        return $http.get(\"https://api.themoviedb.org/3/movie/tt\" + imdbid + \"?api_key=980071c1008d3dd64ab4a0893fe5a727\").then(function (response) {\r\n//            return response.data;\r\n//        });\r\n//    }\r\n//    this.getmoviestodownload = function () {\r\n//        return handlegetrequest(\"getmoviestodownload\");\r\n//    }\r\n//    function handlegetrequest(action, data) {\r\n//        return $http.get(\"/api/moviesapi/\" + action, data).then(function (response) {\r\n//            return response.data;\r\n//        });\r\n//    }\r\n//    function handlepostrequest(action, data) {\r\n//        return $http.post(\"/api/moviesapi/\" + action, data).then(function (response) {\r\n//            return response.data;\r\n//        });\r\n//    }\r\n//}]);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieThumb(moviePosterFactory) {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                imdb: '@'\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                var img = new Image();\r\n                console.log(\"thumb...\");\r\n                moviePosterFactory.GetMovieThumb(scope.imdb).then(function (imageUrl) {\r\n                    img.src = imageUrl;\r\n                    element.parent().append(img);\r\n                    element.remove();\r\n                });\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MovieThumb = MovieThumb;\r\n})(MovieApp || (MovieApp = {}));\r\n\r\nMovieApp.MovieThumb.$inject = ['moviePosterFactory'];\r\n\r\napp.directive(\"movieThumb\", MovieApp.MovieThumb);\r\n//angular.module('movieApp').directive(\"moviePoster\", ['MovieService', function (MovieService) {\r\n//    return {\r\n//        restrict: 'E',\r\n//        replace: true,\r\n//        scope: {\r\n//            imdb: '@',\r\n//        },\r\n//        link: function (scope, element, attributes) {\r\n//            var x = scope.imdb;\r\n//            var img = new Image();\r\n//            $.get(\"https://api.themoviedb.org/3/movie/tt\" + scope.imdb + \"?api_key=980071c1008d3dd64ab4a0893fe5a727\", function (response) {\r\n//                img.src = \"http://image.tmdb.org/t/p/w154\" + response.poster_path;\r\n//                element.parent().append(img);\r\n//                element.remove();\r\n//            });\r\n//        }\r\n//    }\r\n//}])\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieTooltip($compile) {\r\n        return {\r\n            restrict: 'A',\r\n            compile: function (element, attributes) {\r\n                element.attr('ng-mouseover', 'showHover($event, y)');\r\n                element.attr('ng-mouseleave', 'hideHover()');\r\n                element.removeAttr(\"movie-tooltip\");\r\n                return {\r\n                    post: function (scope, iElement, attributes) {\r\n                        $compile(iElement)(scope);\r\n\r\n                        scope.showHover = function ($event, movie) {\r\n                            scope.movie = movie;\r\n                            showTooltip($event.pageY, $event.pageX);\r\n                        };\r\n\r\n                        scope.hideHover = function () {\r\n                            angular.element(\"#movieTooltip\").remove();\r\n                        };\r\n\r\n                        function showTooltip(top, left) {\r\n                            angular.element(\"#movieTooltip\").remove();\r\n                            var xPos = 400 + left;\r\n\r\n                            if (xPos >= window.innerWidth) {\r\n                                left = left - 400;\r\n                            }\r\n\r\n                            var template = '<div class=\"movie-tooltip\" id=\"movieTooltip\" style=\"top:' + top + 'px; left:' + left + 'px;\">' + '<div style=\"font-size:0.8em;float:right;\">Duur: {{movie.Duration}}min.</div>' + '<b>{{movie.Title}}</b><br/>{{movie.Plot}}' + '</div>';\r\n\r\n                            var htmlCompiled = $compile(template)(scope);\r\n                            angular.element('body').append($(htmlCompiled));\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MovieTooltip = MovieTooltip;\r\n\r\n    MovieTooltip.$inject = ['$compile'];\r\n})(MovieApp || (MovieApp = {}));\r\n\r\napp.directive(\"movieTooltip\", MovieApp.MovieTooltip);\r\n//angular.module('movieApp').directive(\"movieTooltip\", ['$compile', function ($compile) {\r\n//    return {\r\n//        restrict: 'A',\r\n//        compile: function (element, attributes) {\r\n//            element.attr('ng-mouseover', 'showHover($event, y)');\r\n//            element.attr('ng-mouseleave', 'hideHover()');\r\n//            element.removeAttr(\"movie-tooltip\");\r\n//            return {\r\n//                post: function (scope, iElement, attributes) {\r\n//                    $compile(iElement)(scope);\r\n//                    scope.showHover = function ($event, movie) {\r\n//                        scope.movie = movie;\r\n//                        showTooltip($event.pageY, $event.pageX);\r\n//                    }\r\n//                    scope.hideHover = function () {\r\n//                        angular.element(\"#movieTooltip\").remove();\r\n//                    }\r\n//                    function showTooltip(top, left) {\r\n//                        angular.element(\"#movieTooltip\").remove();\r\n//                        var xPos = 400 + left;\r\n//                        if (xPos >= window.innerWidth) {\r\n//                            left = left - 400;\r\n//                        }\r\n//                        var template =\r\n//                            '<div class=\"movie-tooltip\" id=\"movieTooltip\" style=\"top:' + top + 'px; left:' + left + 'px;\">' +\r\n//                            '<div style=\"font-size:0.8em;float:right;\">Duur: {{movie.Duration}}min.</div>' +\r\n//                            '<b>{{movie.Title}}</b><br/>{{movie.Plot}}' +\r\n//                            '</div>';\r\n//                        var htmlCompiled = $compile(template)(scope);\r\n//                        angular.element('body').append($(htmlCompiled));\r\n//                    }\r\n//                }\r\n//            }\r\n//        }\r\n//    }\r\n//}]);\r\n","var MovieApp;\r\n(function (MovieApp) {\r\n    function MovieTrailer() {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                url: '@'\r\n            },\r\n            link: function (scope, element, attributes) {\r\n                var iframe = document.createElement(\"IFRAME\");\r\n\r\n                iframe.src = scope.url;\r\n                iframe.width = \"680px\";\r\n                iframe.height = \"383px\";\r\n                iframe.frameBorder = \"0\";\r\n                iframe.scrolling = \"false\";\r\n\r\n                element.parent().append(iframe);\r\n                element.remove();\r\n            }\r\n        };\r\n    }\r\n    MovieApp.MovieTrailer = MovieTrailer;\r\n})(MovieApp || (MovieApp = {}));\r\n\r\napp.directive(\"movieTrailer\", MovieApp.MovieTrailer);\r\n"],"sourceRoot":"/source/"}